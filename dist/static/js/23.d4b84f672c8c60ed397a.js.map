{"version":3,"sources":["webpack:///src/components/Map/GeoMultiMap.vue","webpack:///./src/components/Map/GeoMultiMap.vue?7a58","webpack:///./src/components/Map/GeoMultiMap.vue","webpack:///src/views/components/map/geoMultiMap.vue","webpack:///./src/views/components/map/geoMultiMap.vue?8146","webpack:///./src/views/components/map/geoMultiMap.vue","webpack:///./src/common/js/native.js"],"names":["GeoMultiMap","props","options","type","Object","default","computed","opt","mui","extend","zoom","isLocation","companyAddr","locationStyle","iconLabel","innerHTML","iconStyle","this","data","self","network","coordsType","locationAddress","events","init","map","AMap","Geocoder","city","getLocation","status","result","created","_this","plusReady","js_native","methods","info","netLocation","geocoder","addr","style","arguments","length","undefined","_this2","circle","callback","point","amap","include","contains","position","lng","lat","Number","optison","m","marker","extends_default","po","console","log","_this3","no","currentPos","err","amapLocation","os","plus","toast","ecb","_this4","geolocation","getCurrentPosition","pos","stringify_default","ios","transformCoord","res","y","x","coords","latitude","longitude","geocode","successcb","errorcb","ajax","url","success","error","gps","_this5","lnglat","LngLat","convertFrom","locations","setPosition","getLocationAddr","bus","$emit","plugin","Geolocation","enableHighAccuracy","timeout","buttonOffset","Pixel","zoomToAccuracy","buttonPosition","addControl","event","addListener","onComplete","onError","latlng","address","addressComponent","province","district","street","streetNum","streetNumber","poiName","building","formattedAddress","addresses","Map_GeoMultiMap","render","_h","$createElement","_c","_self","staticClass","ref","attrs","vid","doubleClickZoom","staticRenderFns","geoMultiMap","$on","add","$refs","id","radius","components","__webpack_require__","normalizeComponent","ssrContext","map_geoMultiMap","_vm","_v","directives","name","rawName","value","expression","domProps","on","input","$event","target","composing","tap","geoMultiMap_Component","geoMultiMap_normalizeComponent","__webpack_exports__","d","getNetWorkInfo","types","networkinfo","CONNECTION_UNKNOW","CONNECTION_NONE","CONNECTION_ETHERNET","CONNECTION_WIFI","CONNECTION_CELL2G","CONNECTION_CELL3G","CONNECTION_CELL4G","getCurrentType"],"mappings":"wLAWAA,GACAC,OACAC,SACAC,KAAAC,OACAC,QAAA,uBAGAC,UACAC,IADA,WAaA,OAAAC,IAAAC,WAVAC,KAAA,GACAC,YAAA,EACAC,YAAA,cACAC,eACAC,WACAC,UAAA,IAEAC,UAAA,KAGAC,KAAAf,WAGAgB,KAvBA,WAwBA,IAAAC,EAAAF,KACA,OACAG,WACAC,WAAA,MACAC,mBACAC,QACAC,KADA,SACAC,GACAN,EAAAM,MACAN,EAAAjB,QAAAsB,MAAA,EACA,IAAAE,KAAAC,UAAAC,KAAA,OACAC,YAAAV,EAAAZ,IAAAK,YAAA,SAAAkB,EAAAC,GACAZ,EAAAU,YAAAC,EAAAC,EAAAN,SAMAO,QAzCA,WAyCA,IAAAC,EAAAhB,KACAT,IAAA0B,UAAA,WACAD,EAAAb,QAAAhB,OAAA+B,EAAA,EAAA/B,MAGAgC,SAEAP,YAFA,SAEAC,EAAAC,EAAAN,GACA,aAAAK,GAAA,OAAAC,EAAAM,MACApB,KAAAqB,YAAAb,IAIAc,SARA,SAQAC,GAAA,IAAAC,EAAAC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAG,EAAA5B,KAAA6B,EAAAJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,MAAAK,EAAAL,UAAA,GACA,GAAAF,OAAA,CACA,IAAAD,EAAA,IAAAb,KAAAC,UAAAC,KAAA,OACAW,EAAAV,YAAAW,OAAA,SAAAV,EAAAC,GACA,gBAAAD,GAAA,OAAAC,EAAAM,KAAA,CACA,IAAAW,EAAAC,EAAA,EAAAlB,EAAAc,EAAApB,IAAAqB,EAAAL,GACAM,EAAAvC,IAAAC,UAAA+B,GAAAU,QAAAF,EAAAG,SAAAN,EAAAO,qBAIA,GAAAZ,EAAAa,KAAAb,EAAAc,IAAA,CACAd,EAAA,IAAAe,OAAAf,EAAA,KACAA,EAAA,IAAAe,OAAAf,EAAA,KACA,IAAAgB,EAAAhD,IAAAC,OAAA+B,EAAAC,GACIQ,EAAA,EAAJO,EAAAvC,KAAAQ,IAAA,SAAAgC,GACAZ,EAAAa,OAAAD,IAEAX,EAAAa,OAAAb,GAAAO,IAAAb,EAAA,IAAAc,IAAAd,EAAA,MACA,IAAAoB,EAAAX,EAAA,EAAAH,EAAA7B,KAAAQ,KACAoC,QAAAC,IAAA7C,KAAAmC,UACAL,EAAAvC,IAAAC,UAAA+B,GAAAU,QAAAU,EAAAT,SAAAlC,KAAAmC,eAIAd,YAhCA,WAgCA,IAAAyB,EAAA9C,KACAQ,EAAAR,KAAAQ,IACA,GAAAR,KAAAG,QAAA4C,GAEA/C,KAAAgD,WAAAxC,EAAA,SAAAyC,GACAH,EAAAI,aAAA1C,KAGAjB,IAAA4D,GAAAC,KAEApD,KAAAgD,WAAAxC,EAAA,SAAAyC,GACA1D,IAAA8D,MAAA,uBAIArD,KAAAkD,aAAA1C,IAKAwC,WApDA,SAoDAxC,EAAA8C,GAAA,IAAAC,EAAAvD,KACAT,IAAA0B,UAAA,WACAmC,KAAAI,YAAAC,mBAAA,SAAAC,GACAd,QAAAC,IAAA,aACAD,QAAAC,IAAAc,IAAAD,IACAH,EAAAnD,WAAAsD,EAAAtD,WAGAb,IAAA4D,GAAAS,IACAL,EAAAM,eAAAH,EAAA,SAAAI,GACAlB,QAAAC,IAAA,QACAD,QAAAC,IAAAc,IAAAG,IACAP,EAAAL,aAAA1C,GACA6B,IAAAyB,EAAAhD,OAAA,GAAAiD,EACA3B,IAAA0B,EAAAhD,OAAA,GAAAkD,GACAN,IACA,SAAAT,GACAM,EAAAL,aAAA1C,GACA6B,IAAAqB,EAAAO,OAAAC,SACA9B,IAAAsB,EAAAO,OAAAE,WACAT,KAGAH,EAAAL,aAAA1C,GACA6B,IAAAqB,EAAAO,OAAAC,SACA9B,IAAAsB,EAAAO,OAAAE,WACAT,IAEA,SAAAT,GACAK,EAAAL,KACAmB,SAAA,OAIAP,eAtFA,SAsFAH,EAAAW,EAAAC,GACA/E,IAAAgF,MACAC,IAAA,+CAAAd,EAAAO,OAAAE,UAAA,IAAAT,EAAAO,OAAAC,SAAA,mDACAhF,KAAA,MACAuF,QAAA,SAAAxE,GACA,IAAAA,EAAAY,OACAwD,EAAApE,GAEAqE,EAAArE,IAGAyE,MAAA,SAAAzB,GACA1D,IAAA8D,MAAA,gBAKAH,aAvGA,SAuGA1C,EAAAmE,EAAAjB,GAAA,IAAAkB,EAAA5E,KACA,GAAA2E,EAAA,CACA,IAAAE,EAAA,IAAApE,KAAAqE,OAAAH,EAAAvC,IAAAuC,EAAAtC,KACA5B,KAAAsE,YAAAF,EAAA7E,KAAAI,WAAA,SAAAS,EAAAZ,GACA,aAAAY,IACA+D,EAAAzC,UAAAlC,EAAA+E,UAAA,GAAA5C,IAAAnC,EAAA+E,UAAA,GAAA3C,KACAuC,EAAAtF,IAAAM,cAAA,IAAAK,EAAA+E,UAAA,GAAA5C,IACAwC,EAAAtF,IAAAM,cAAA,IAAAK,EAAA+E,UAAA,GAAA3C,IACAuC,EAAAnC,OAKAmC,EAAAnC,OAAAwC,YAAA,IAAAxE,KAAAqE,OAAA7E,EAAA+E,UAAA,GAAA5C,IAAAnC,EAAA+E,UAAA,GAAA3C,MAJAL,EAAA,EAAA4C,EAAAtF,IAAAM,cAAAY,EAAA,SAAAgC,GACAoC,EAAAnC,OAAAD,IAMAoC,EAAAM,gBAAAxB,GACAyB,EAAA,EAAAC,MAAA,WAAAR,EAAAvE,iBACAuE,EAAA3F,QAAAS,YAAA,UAIAc,EAAA6E,OAAA,8BACA,IAAA7B,EAAA,IAAA/C,KAAA6E,aACAC,oBAAA,EACAC,QAAA,IACAC,aAAA,IAAAhF,KAAAiF,MAAA,OACAC,gBAAA,EACAC,eAAA,OAEApF,EAAAqF,WAAArC,GACAA,EAAAC,qBACAhD,KAAAqF,MAAAC,YAAAvC,EAAA,oBAAAwC,GACApD,QAAAC,IAAAmD,GACApB,EAAAtF,IAAAM,cAAA,IAAAoG,EAAA7D,SAAAC,IACAwC,EAAAtF,IAAAM,cAAA,IAAAoG,EAAA7D,SAAAE,IAEAuC,EAAAnC,OAMAmC,EAAAnC,OAAAwC,YAAA,IAAAxE,KAAAqE,OAAAkB,EAAA7D,SAAAC,IAAA4D,EAAA7D,SAAAE,MALAL,EAAA,EAAA4C,EAAAtF,IAAAM,cAAAY,EAAA,SAAAgC,GACAoC,EAAAnC,OAAAD,EACAI,QAAAC,IAAAL,KAMAoC,EAAAM,gBAAAc,GACAb,EAAA,EAAAC,MAAA,WAAAR,EAAAvE,iBACAuE,EAAAzC,UAAA6D,EAAA7D,SAAAC,IAAA4D,EAAA7D,SAAAE,KACAuC,EAAA3F,QAAAS,YAAA,IAEAe,KAAAqF,MAAAC,YAAAvC,EAAA,iBAAAyC,SAKAf,gBA/JA,SA+JAxB,GACAd,QAAAC,IAAAa,GACA,IAAAwC,EAAAxC,EAAAO,QAAAP,EAAAvB,SACAZ,EAAAmC,EAAAyC,SAAAzC,EAAA0C,iBACAjE,GACAE,IAAA6D,EAAAhC,UAAAgC,EAAA7D,KAAA,EACAD,IAAA8D,EAAA/B,WAAA+B,EAAA9D,KAAA,GAEAQ,QAAAC,IAAAtB,GACA,IAAA4E,GACAE,SAAA9E,EAAA8E,UAAA,GACA1F,KAAAY,EAAAZ,MAAA,GACA2F,SAAA/E,EAAA+E,UAAA,GACAC,OAAAhF,EAAAgF,QAAA,GACAC,UAAAjF,EAAAiF,WAAAjF,EAAAkF,cAAA,GACAC,QAAAnF,EAAAmF,SAAA,GACAC,SAAApF,EAAAoF,UAEA3G,KAAAK,iBACA8B,WACAgE,UACAS,iBAAArF,EAAAsF,WAAAnD,EAAAkD,qBC1OeE,GADEC,OAFjB,WAA0B,IAAaC,EAAbhH,KAAaiH,eAA0BC,EAAvClH,KAAuCmH,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,yBAAmCF,EAAA,WAAgBG,IAAA,MAAAD,YAAA,cAAAE,OAA2CC,IAAA,OAAA9H,KAA9KO,KAA8KV,IAAAG,KAAAa,OAA9KN,KAA8KM,OAAAkH,iBAAA,MAA8E,IAErQC,oBCCjB,ICYAC,GACAzH,KADA,WAEA,OACAsB,KAAA,GACAtC,SACAS,YAAA,EACAa,MAAA,KAIAQ,QAVA,WAWEoE,EAAA,EAAFwC,IAAA,oBAAA7D,GACAlB,QAAAC,IAAAiB,MAGA3C,SACAyG,IADA,WAEA5H,KAAA6H,MAAArH,IAAAc,UAAAc,IAAA,MAAAC,IAAA,KAAAyF,GAAA,OAAAC,OAAA,cAAAjE,GACAlB,QAAAC,IAAAiB,OAOAkE,YACAjJ,YDtCyBkJ,EAAQ,OAcjCC,CACEnJ,EACA+H,GATF,EAVA,SAAAqB,GACEF,EAAQ,SAaV,KAEA,MAUgC,UEvBjBG,GADErB,OAFP,WAAgB,IAAAsB,EAAArI,KAAagH,EAAAqB,EAAApB,eAA0BC,EAAAmB,EAAAlB,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,YAAA,cAAwBF,EAAA,OAAYE,YAAA,aAAuBF,EAAA,iBAAsBG,IAAA,MAAAC,OAAiBrI,QAAAoJ,EAAApJ,YAAuB,GAAAoJ,EAAAC,GAAA,KAAApB,EAAA,SAA8BqB,aAAaC,KAAA,QAAAC,QAAA,UAAAC,MAAAL,EAAA,KAAAM,WAAA,SAAkErB,OAASpI,KAAA,QAAc0J,UAAWF,MAAAL,EAAA,MAAmBQ,IAAKC,MAAA,SAAAC,GAAyBA,EAAAC,OAAAC,YAAsCZ,EAAA9G,KAAAwH,EAAAC,OAAAN,WAA+BL,EAAAC,GAAA,KAAApB,EAAA,UAA2BE,YAAA,wBAAAyB,IAAwCK,IAAAb,EAAAT,OAAeS,EAAAC,GAAA,WAE1hBb,oBCChC,IAcI0B,EAdqBlB,EAAQ,OAcjBmB,CACd1B,EACAU,GAT6B,EAV/B,SAAoBD,GAClBF,EAAQ,SAaS,kBAEU,MAUdoB,EAAA,QAAAF,EAAiB,qFC1BhClB,EAAAqB,EAAAD,EAAA,sBAAAE,IACO,IAAMA,EAAiB,WAC7B,IAAIC,KACArJ,GAAY4C,GAAI,EAAGyF,KAAM,OAC7BgB,EAAMpG,KAAKqG,YAAYC,mBAAqB,qBAC5CF,EAAMpG,KAAKqG,YAAYE,iBAAmB,kBAC1CH,EAAMpG,KAAKqG,YAAYG,qBAAuB,sBAC9CJ,EAAMpG,KAAKqG,YAAYI,iBAAmB,kBAC1CL,EAAMpG,KAAKqG,YAAYK,mBAAqB,yBAC5CN,EAAMpG,KAAKqG,YAAYM,mBAAqB,yBAC5CP,EAAMpG,KAAKqG,YAAYO,mBAAqB,yBAC5C,IAAInJ,EAASuC,KAAKqG,YAAYQ,iBAI9B,OAHc,IAAXpJ,IAAgBV,GAAY4C,GAAI,EAAGyF,KAAM,WACzC3H,EAAS,IAAKV,GAAY4C,GAAI,EAAGyF,KAAM,SAC5B,IAAX3H,IAAgBV,GAAY4C,GAAI,EAAGyF,KAAM,QACrCrI","file":"static/js/23.d4b84f672c8c60ed397a.js","sourcesContent":["<template>\r\n\t<div class=\"z-geo-multi-map-wrap\">\r\n\t\t<el-amap class=\"z-amap-wrap\" vid=\"amap\" :zoom=\"opt.zoom\" ref=\"map\" :events=\"events\" :doubleClickZoom=\"false\">\r\n    </el-amap>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport * as amapMethods from '@/common/js/amap'\r\nimport { getNetWorkInfo } from '@/common/js/native'\r\nimport { bus } from '@/common/js/bus'\r\nexport default {\r\n\tprops: {\r\n\t\toptions: {\r\n\t\t\ttype: Object,\r\n\t\t\tdefault: function() { return {} }\r\n \t\t}\r\n\t},\r\n\tcomputed: {\r\n\t\topt() {\r\n\t\t\tlet opt = {\r\n\t\t\t\tzoom: 12,\r\n\t\t\t\tisLocation: false,\t\t\t// 定位完成\r\n\t\t\t\tcompanyAddr: '苏州市金门路1200号',\r\n\t\t\t\tlocationStyle: {\t\t\t\t// 当前位置marker样式\r\n\t\t\t\t\ticonLabel: {\r\n\t\t\t\t\t\tinnerHTML: '',\r\n\t\t\t\t\t},\r\n\t\t\t\t\ticonStyle: ''\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn mui.extend({}, opt, this.options)\r\n\t\t}\r\n\t},\r\n\tdata() {\r\n\t\tconst self = this\r\n\t\treturn {\r\n\t\t\tnetwork: {},\t\t\t\t\t\t\t\t// 网络状态\r\n\t\t\tcoordsType: 'gps',\t\t\t// 定位方式\r\n\t\t\tlocationAddress: {},\t\t// 保存定位后的地址\r\n\t\t\tevents: {\r\n\t\t\t\tinit(map) {\r\n\t\t\t\t\tself.map = map\r\n\t\t\t\t\tself.options.init = true\r\n\t\t\t\t\tlet geocoder = new AMap.Geocoder({ city: \"全国\" })\r\n\t\t\t\t\tgeocoder.getLocation(self.opt.companyAddr, function(status, result) {\r\n\t\t\t\t\t\tself.getLocation(status, result, map)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\tmui.plusReady(() => {\r\n\t\t\tthis.network = getNetWorkInfo()\r\n\t\t})\r\n\t},\r\n\tmethods: {\r\n\t\t// 定位\r\n\t\tgetLocation(status, result, map) {\r\n\t\t\tif(status === \"complete\" && result.info === \"OK\") {\r\n\t\t\t\tthis.netLocation(map)\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 添加地点\r\n\t\tgeocoder(addr, style={}, circle={}, callback) {\r\n\t\t\tif(addr.addr) {\r\n\t\t\t\tlet geocoder = new AMap.Geocoder({ city: \"全国\" })\r\n\t\t\t\tgeocoder.getLocation(addr.addr, (status, result) => {\r\n\t\t\t\t\tif(status === 'complete' && result.info === \"OK\") {\r\n\t\t\t\t\t\tlet point = amapMethods.geocoder(result, this.map, circle, style)\r\n\t\t\t\t\t\tcallback(mui.extend({}, addr, {include: point.contains(this.position)}))\r\n\t\t\t\t\t\t// console.log(a.contains(this.position))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else if(addr.lng && addr.lat) {\r\n\t\t\t\taddr['lng'] = Number(addr['lng'])\r\n\t\t\t\taddr['lat'] = Number(addr['lat'])\r\n\t\t\t\tlet optison = mui.extend(addr, style)\r\n\t\t\t\tamapMethods.addSimpleMarker(optison, this.map, m => {\r\n      \t\tthis.marker = m\r\n      \t})\r\n      \tcircle = {...circle, lng: addr['lng'], lat: addr['lat']}\r\n      \tlet po = amapMethods.addCircle(circle, this.map)\r\n      \tconsole.log(this.position)\r\n      \tcallback(mui.extend({}, addr, {include: po.contains(this.position)}))\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 根据不同的忘了状态，使用不同的定位方式\r\n\t\tnetLocation() {\r\n\t\t\tlet map = this.map\r\n\t\t\tif(this.network.no == 3) {\r\n\t\t\t\t// wifi开启情况，如果开启的gps定位，则使用gps定位，否则使用网络定位\r\n\t\t\t\tthis.currentPos(map, err => {\r\n          this.amapLocation(map)\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tif(mui.os.plus) {\r\n\t\t\t\t\t// 非wifi情况下，不开启gps定位无法获取位置信息\r\n\t\t\t\t\tthis.currentPos(map, err => {\r\n\t\t\t\t\t\tmui.toast(\"当前非WIFI网络,请打开定位服务\")\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 网页版，使用amap定位\r\n\t\t\t\t\tthis.amapLocation(map)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 调用原生gps定位，获取位置信息\r\n\t\tcurrentPos(map, ecb) {\r\n\t\t\tmui.plusReady(() => {\r\n\t\t\t\tplus.geolocation.getCurrentPosition(pos => {\r\n\t\t\t\t\tconsole.log('调用原生GPS定位')\r\n\t\t\t\t\tconsole.log(JSON.stringify(pos))\r\n\t\t\t\t\tthis.coordsType = pos.coordsType\r\n\t\t\t\t\t// IOS平台定位偏差，查看MUI文档(http://www.dcloud.io/docs/api/zh_cn/geolocation.html#plus.geolocation.PositionOptions)是因为不支持高德地图，采用的定位方式是【wgs84】\r\n\t\t\t\t\t// 这里使用百度地图坐标转换API，将【wgs84】转换为【gcj02】\r\n\t\t\t\t\tif(mui.os.ios) {\r\n\t\t\t\t\t\tthis.transformCoord(pos, res => {\r\n\t\t\t\t\t\t\tconsole.log('经过处理')\r\n\t\t\t\t\t\t\tconsole.log(JSON.stringify(res))\r\n\t\t\t\t\t\t\tthis.amapLocation(map, {\r\n\t\t\t        \tlat: res.result[0].y,\r\n\t\t\t        \tlng: res.result[0].x\r\n\t\t\t        }, pos)\r\n\t\t\t\t\t\t}, err => {\r\n\t\t\t\t\t\t\tthis.amapLocation(map, {\r\n\t\t\t        \tlat: pos.coords.latitude,\r\n\t\t\t        \tlng: pos.coords.longitude\r\n\t\t\t        }, pos)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.amapLocation(map, {\r\n\t\t        \tlat: pos.coords.latitude,\r\n\t\t        \tlng: pos.coords.longitude\r\n\t\t        }, pos)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, err => {\r\n\t\t\t\t\tecb(err)\r\n\t\t\t\t}, { geocode: true })\r\n\t\t\t})\r\n\t\t},\r\n\t\t// 调用百度地图坐标转换API\r\n\t\ttransformCoord(pos, successcb, errorcb) {\r\n\t\t\tmui.ajax({\r\n\t\t\t\turl: `http://api.map.baidu.com/geoconv/v1/?coords=${pos.coords.longitude},${pos.coords.latitude}&from=1&to=3&ak=efWzpkW5jPMcPfrcaa9wQHatiKQ5la7o`,\r\n\t\t\t\ttype: 'GET',\r\n\t\t\t\tsuccess: data => {\r\n\t\t\t\t\tif(data.status === 0) {\r\n\t\t\t\t\t\tsuccesscb(data)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\terrorcb(data)\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\terror: err => {\r\n\t\t\t\t\tmui.toast('请检查网络后再试')\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\t// amap定位\r\n\t\tamapLocation(map, gps, pos) {\r\n\t\t\tif(gps) {\r\n\t\t\t\tlet lnglat = new AMap.LngLat(gps.lng, gps.lat)\r\n        AMap.convertFrom(lnglat, this.coordsType, (status, data) => {\r\n          if (status === \"complete\") {\r\n            this.position = [data.locations[0].lng, data.locations[0].lat]\r\n            this.opt.locationStyle['lng'] = data.locations[0].lng\r\n            this.opt.locationStyle['lat'] = data.locations[0].lat\r\n            if(!this.marker) {\r\n            \tamapMethods.addSimpleMarker(this.opt.locationStyle, map, m => {\r\n            \t\tthis.marker = m\r\n            \t})\r\n          \t} else {\r\n          \t\tthis.marker.setPosition(new AMap.LngLat(data.locations[0].lng, data.locations[0].lat))\r\n          \t}\r\n\r\n            this.getLocationAddr(pos)\r\n            bus.$emit('sendAddr', this.locationAddress)\r\n            this.options.isLocation = true \t\t\t// 定位成功\r\n          }\r\n        })\r\n\t\t\t} else {\r\n\t\t\t\tmap.plugin(\"AMap.Geolocation\", () => {\r\n          let geolocation = new AMap.Geolocation({\r\n            enableHighAccuracy: true, //是否使用高精度定位，默认:true\r\n            timeout: 10000, //超过10秒后停止定位，默认：无穷大\r\n            buttonOffset: new AMap.Pixel(10, 20), //定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)\r\n            zoomToAccuracy: true, //定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false\r\n            buttonPosition: \"RB\"\r\n          })\r\n          map.addControl(geolocation)\r\n          geolocation.getCurrentPosition()\r\n          AMap.event.addListener(geolocation, \"complete\", onComplete => {\r\n          \tconsole.log(onComplete)\r\n          \tthis.opt.locationStyle['lng'] = onComplete.position.lng\r\n          \tthis.opt.locationStyle['lat'] = onComplete.position.lat\r\n\r\n          \tif(!this.marker) {\r\n            \tamapMethods.addSimpleMarker(this.opt.locationStyle, map, m => {\r\n            \t\tthis.marker = m\r\n            \t\tconsole.log(m)\r\n            \t})\r\n          \t} else {\r\n          \t\tthis.marker.setPosition(new AMap.LngLat(onComplete.position.lng, onComplete.position.lat))\r\n          \t}\r\n          \t\r\n            this.getLocationAddr(onComplete)\r\n            bus.$emit('sendAddr', this.locationAddress)\r\n            this.position = [onComplete.position.lng, onComplete.position.lat]\r\n            this.options.isLocation = true\r\n          }); //返回定位信息\r\n          AMap.event.addListener(geolocation, \"error\", onError => {}) //返回定位出错信息\r\n        })\r\n\t\t\t}\r\n\t\t},\r\n\t\t// 解析定位后的地理位置\r\n\t\tgetLocationAddr(pos) {\r\n\t\t\tconsole.log(pos)\r\n\t\t\tlet latlng = pos.coords || pos.position\r\n\t\t\tlet addr = pos.address || pos.addressComponent\r\n\t\t\tlet position = {\r\n\t\t\t\tlat: latlng.latitude || latlng.lat || 0,\r\n\t\t\t\tlng: latlng.longitude || latlng.lng || 0,\r\n\t\t\t}\r\n\t\t\tconsole.log(addr)\r\n\t\t\tlet address = {\r\n\t\t\t\tprovince: addr.province || \"\",\r\n\t\t\t\tcity: addr.city || \"\",\r\n\t\t\t\tdistrict: addr.district || \"\",\r\n\t\t\t\tstreet: addr.street || \"\",\r\n\t\t\t\tstreetNum: addr.streetNum || addr.streetNumber || \"\",\r\n\t\t\t\tpoiName: addr.poiName || \"\",\r\n\t\t\t\tbuilding: addr.building\r\n\t\t\t}\r\n\t\t\tthis.locationAddress = {\r\n\t\t\t\tposition: position,\r\n\t\t\t\taddress: address,\r\n\t\t\t\tformattedAddress: addr.addresses || pos.formattedAddress\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang='scss'>\r\n.z-geo-multi-map-wrap {\r\n\theight: 100%;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/Map/GeoMultiMap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"z-geo-multi-map-wrap\"},[_c('el-amap',{ref:\"map\",staticClass:\"z-amap-wrap\",attrs:{\"vid\":\"amap\",\"zoom\":_vm.opt.zoom,\"events\":_vm.events,\"doubleClickZoom\":false}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-923be816\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Map/GeoMultiMap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-923be816\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./GeoMultiMap.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./GeoMultiMap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./GeoMultiMap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-923be816\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./GeoMultiMap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Map/GeoMultiMap.vue\n// module id = null\n// module chunks = ","<template lang=\"html\">\r\n  <div class=\"container\">\r\n  \t<div class=\"map-wrap\">\r\n  \t\t<geo-multi-map ref='map' :options='options' />\r\n  \t</div>\r\n\t\t\r\n\t\t<input type=\"text\" v-model='addr' />\r\n\t\t<button class=\"mui-btn mui-btn-block\" @tap='add'>添加</button>\r\n\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\nimport { bus } from '@/common/js/bus'\r\nimport GeoMultiMap from '@/components/Map/GeoMultiMap.vue'\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\taddr: '',\r\n\t\t\toptions: {\r\n\t\t\t\tisLocation: false,\t\t\t// 定位完成 必须\r\n\t\t\t\tinit: false,\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\tcreated() {\r\n\t\tbus.$on('sendAddr', res => {\r\n\t\t\tconsole.log(res)\r\n\t\t})\r\n\t},\r\n\tmethods: {\r\n\t\tadd() {\r\n\t\t\tthis.$refs.map.geocoder({lng: 11123, lat: 4652, id: 1}, {}, {radius: 200}, res => {\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})\r\n\t\t\t/*this.$refs.map.geocoder({addr: this.addr, id: 1}, {}, {radius: 200}, res => {\r\n\t\t\t\tconsole.log(res)\r\n\t\t\t})*/\r\n\t\t}\r\n\t},\r\n\tcomponents: {\r\n\t\tGeoMultiMap\r\n\t}\r\n}\r\n</script>\r\n\r\n<style lang='scss' scoped>\r\n.map-wrap {\r\n\theight: 63.14vh;\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/views/components/map/geoMultiMap.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"map-wrap\"},[_c('geo-multi-map',{ref:\"map\",attrs:{\"options\":_vm.options}})],1),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.addr),expression:\"addr\"}],attrs:{\"type\":\"text\"},domProps:{\"value\":(_vm.addr)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.addr=$event.target.value}}}),_vm._v(\" \"),_c('button',{staticClass:\"mui-btn mui-btn-block\",on:{\"tap\":_vm.add}},[_vm._v(\"添加\")])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6d281b0a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/components/map/geoMultiMap.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6d281b0a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./geoMultiMap.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./geoMultiMap.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./geoMultiMap.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6d281b0a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./geoMultiMap.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6d281b0a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/components/map/geoMultiMap.vue\n// module id = null\n// module chunks = ","// 获取网络状态\r\nexport const getNetWorkInfo = () => {\r\n\tvar types = {}\r\n\tlet network = { no: 1, name: \"无网络\" }\r\n\ttypes[plus.networkinfo.CONNECTION_UNKNOW] = \"Unknown connection\"\r\n\ttypes[plus.networkinfo.CONNECTION_NONE] = \"None connection\"\r\n\ttypes[plus.networkinfo.CONNECTION_ETHERNET] = \"Ethernet connection\"\r\n\ttypes[plus.networkinfo.CONNECTION_WIFI] = \"WiFi connection\"\r\n\ttypes[plus.networkinfo.CONNECTION_CELL2G] = \"Cellular 2G connection\"\r\n\ttypes[plus.networkinfo.CONNECTION_CELL3G] = \"Cellular 3G connection\"\r\n\ttypes[plus.networkinfo.CONNECTION_CELL4G] = \"Cellular 4G connection\"\r\n\tlet status = plus.networkinfo.getCurrentType()\r\n\tif(status === 3) { network = { no: 3, name: \"WIFI网络\" } }\r\n\tif(status > 3) { network = { no: 2, name: \"移动流量\" } }\r\n\tif(status === 1) { network = { no: 1, name: \"无网络\" } }\r\n\treturn network\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/js/native.js"],"sourceRoot":""}